#!/bin/bash

INTERACTIVE="-it"
if [ "$1" = "-n" ] ; then
	echo "Option -n given. Running in noninteractive mode."
	INTERACTIVE=""
	shift
fi

IMAGE="ipunktbs/gulp-tasks"
USERID=$(id -u)
GROUPID=$(id -g)
#RUNCOMMAND="docker run $INTERACTIVE --rm --user $USERID:$GROUPID -v " $IMAGE"
RUNCOMMAND="docker"
RUNPARAMETERS=("run" $INTERACTIVE "--rm" "--user" "$USERID:$GROUPID" -v "$(pwd):/home/gulp/project" "$IMAGE" )

function help {

	echo "==== frontend build helper ===="

	case $COMMAND in
		run)
			echo "$0 run command"
			echo ""
			echo "Startet command im Projektverzeichnis innerhalb des Containers"
			exit
			;;
	esac


	echo "$0 [COMMAND]"
	echo ""
	echo "Commands"
	echo ""
	echo "== build =="
	echo "Startet gulp build im Projektverzeichnis im Container"
	echo ""
	echo "== build:dev =="
	echo "Startet gulp build:dev im Projektverzeichnis im Container"
	echo ""
	echo "== watch =="
	echo "Startet gulp watch im Projektverzeichnis im Container"
	echo ""
	echo ""
	echo "== update =="
	echo "Holt die neuste Version des Docker Images von Dockerhub"
	echo ""
	echo ""
	return
}

COMMAND=$1

case $COMMAND in
	update)
		docker pull $IMAGE
		;;
	run)
		if [ "$#" -lt 2 ] ; then
			help $COMMAND
			exit 1
		fi
		shift
		$RUNCOMMAND "${RUNPARAMETERS[@]}" $@
		;;
	*)
		if [ "$#" -lt 1 ] ; then
			help
			exit 1
		fi
		$RUNCOMMAND "${RUNPARAMETERS[@]}" npm run $@
		;;
esac
